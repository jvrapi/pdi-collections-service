# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddCardInput {
  cardId: String!
  quantity: Int!
}

type Auth {
  token: String!
}

input AuthenticateUserInput {
  password: String!
  username: String!
}

type Card {
  id: String!
  imageUri: String!
  name: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  username: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input GetCardsInput {
  name: String
  skip: Int
  take: Int!
}

type Mutation {
  addCard(data: AddCardInput!): UserCardModel!
  authenticateUser(data: AuthenticateUserInput!): Auth!
  createUser(data: CreateUserInput!): UserCreated!
  updateUser(data: UpdateUserInput!): User!
}

type Query {
  cards(data: GetCardsInput!): [Card!]!
  user: User!
}

input UpdateUserInput {
  email: String!
  name: String!
  username: String!
}

type User {
  cards(data: UserCollectionInput!): [UserCardModel!]!
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  updatedAt: DateTime!
  username: String!
}

type UserCardModel {
  addedAt: DateTime!
  id: String!
  imageUri: String!
  name: String!
  quantity: Int!
  updatedAt: DateTime!
}

input UserCollectionInput {
  skip: Int
  take: Int!
}

type UserCreated {
  id: String!
}